{"ast":null,"code":"import { all, fork, put, takeLatest, delay, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE } from '../reducers/user'; // get이랑 delete는 데이터가 없다.\n\nfunction loadUserAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction signupAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signup(action) {\n  try {\n    const result = yield call(signupAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI() {\n  return axios.post('/follow');\n}\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(followAPI)\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI() {\n  return axios.post('/follow');\n}\n\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(unfollowAPI)\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signup);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLoadUser), fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), // call이랑은 다르다\n  fork(watchLogOut), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["C:/Users/ka/Desktop/react-nodebird/prepare/front/sagas/user.js"],"names":["all","fork","put","takeLatest","delay","call","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","loadUserAPI","get","loadUser","action","result","data","type","LOAD_USER_SUCCESS","err","error","response","logInAPI","post","logIn","logOutAPI","logOut","signupAPI","signup","console","log","followAPI","follow","unfollowAPI","unfollow","watchLoadUser","LOAD_USER_REQUEST","watchFollow","watchUnfollow","watchLogIn","watchLogOut","watchSignUp","userSaga"],"mappings":"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","sourcesContent":["import { all, fork, put, takeLatest, delay, call } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n  LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE,\r\n  LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\r\n  SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE,\r\n  FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE,\r\n  UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE,\r\n} from '../reducers/user';\r\n\r\n\r\n\r\n// get이랑 delete는 데이터가 없다.\r\nfunction loadUserAPI() {\r\n  return axios.get('/user');\r\n}\r\n\r\nfunction* loadUser(action) {\r\n  try {\r\n    const result = yield call(loadUserAPI, action.data);\r\n    yield put({\r\n      type: LOAD_USER_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction logInAPI(data) {\r\n  return axios.post('/user/login', data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    const result = yield call(logInAPI, action.data);\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction logOutAPI() {\r\n  return axios.post('/user/logout');\r\n}\r\n\r\nfunction* logOut() {\r\n  try {\r\n    yield call(logOutAPI);\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction signupAPI(data) {\r\n  return axios.post('/user', data);\r\n}\r\n\r\nfunction* signup(action) {\r\n  try {\r\n    const result = yield call(signupAPI, action.data);\r\n    console.log(result);\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction followAPI() {\r\n  return axios.post('/follow');\r\n}\r\n\r\nfunction* follow(action) {\r\n  try {\r\n    // const result = yield call(followAPI)\r\n    yield delay(1000);\r\n    yield put({\r\n      type: FOLLOW_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: FOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction unfollowAPI() {\r\n  return axios.post('/follow');\r\n}\r\n\r\nfunction* unfollow(action) {\r\n  try {\r\n    // const result = yield call(unfollowAPI)\r\n    yield delay(1000);\r\n    yield put({\r\n      type: UNFOLLOW_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: UNFOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n\r\nfunction* watchLoadUser() {\r\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nfunction* watchFollow() {\r\n  yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signup);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchLoadUser),\r\n    fork(watchFollow),\r\n    fork(watchUnfollow),\r\n    fork(watchLogIn), // call이랑은 다르다\r\n    fork(watchLogOut),\r\n    fork(watchSignUp),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}