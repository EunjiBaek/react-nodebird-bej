{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ka\\\\Desktop\\\\react-nodebird\\\\prepare\\\\front\\\\pages\\\\post\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// post/[id].js -> id가 계속 바뀐다\nimport { useRouter } from 'next/router';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport wrapper from '../../store/configureStore';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\n\nconst Post = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, id, \"\\uBC88\\uC758 \\uAC8C\\uC2DC\\uAE00\");\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Post;","map":{"version":3,"sources":["C:/Users/ka/Desktop/react-nodebird/prepare/front/pages/post/[id].js"],"names":["useRouter","END","axios","wrapper","LOAD_MY_INFO_REQUEST","Post","router","id","query","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","dispatch","type","LOAD_POST_REQUEST","sagaTask","toPromise"],"mappings":";;;AAAA;AACA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAASC,oBAAT,QAAqC,qBAArC;;AAIA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,QAAM;AAAEO,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMD,EAAN,oCADJ;AAIH,CARD;;AAWA,OAAO,MAAME,kBAAkB,GAAGN,OAAO,CAACM,kBAAR,CAA2B,MAAOC,OAAP,IAAmB;AAC5E,QAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;AACAT,EAAAA,KAAK,CAACY,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;AACA,MAAIL,OAAO,CAACE,GAAR,IAAeD,MAAnB,EAA2B;AACvBT,IAAAA,KAAK,CAACY,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,MAAhC;AACH;;AACDD,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB;AACnBC,IAAAA,IAAI,EAAEd;AADa,GAAvB;AAGAM,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB;AACnBC,IAAAA,IAAI,EAAEC;AADa,GAAvB;AAGAT,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuBhB,GAAvB;AACA,QAAMS,OAAO,CAACM,KAAR,CAAcI,QAAd,CAAuBC,SAAvB,EAAN;AACH,CAdiC,CAA3B;AAgBP,eAAehB,IAAf","sourcesContent":["// post/[id].js -> id가 계속 바뀐다\r\nimport { useRouter } from 'next/router';\r\nimport { END } from 'redux-saga';\r\nimport axios from 'axios';\r\nimport wrapper from '../../store/configureStore';\r\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\r\n\r\n\r\n\r\nconst Post = () => {\r\n    const router = useRouter();\r\n    const { id } = router.query;\r\n\r\n    return (\r\n        <div>{id}번의 게시글</div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch({\r\n        type: LOAD_POST_REQUEST,\r\n    });\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Post;"]},"metadata":{},"sourceType":"module"}