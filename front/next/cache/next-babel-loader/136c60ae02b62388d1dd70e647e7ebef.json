{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ka\\\\Desktop\\\\react-nodebird\\\\prepare\\\\front\\\\pages\\\\user\\\\[id].js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Avatar, Card } from 'antd';\nimport { END } from 'redux-saga';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport { LOAD_USER_POSTS_REQUEST } from '../../reducers/post';\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from '../../reducers/user';\nimport PostCard from '../../components/PostCard';\nimport wrapper from '../../store/configureStore';\nimport AppLayout from '../../components/AppLayout';\n\nconst User = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  const {\n    userInfo\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    const onScroll = () => {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          dispatch({\n            type: LOAD_USER_POSTS_REQUEST,\n            lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\n            data: id\n          });\n        }\n      }\n    };\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length, hasMorePosts, id]);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, userInfo === null || userInfo === void 0 ? void 0 : userInfo.nickname, \"\\uB2D8\\uC758 \\uAE00\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: `${userInfo.nickname}님의 게시글`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: `${userInfo.nickname}님의 게시글`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: `${userInfo.nickname}님의 게시글`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: \"https://nodebird.com/favicon.ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: `https://nodebird.com/user/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })), userInfo ? __jsx(Card, {\n    actions: [__jsx(\"div\", {\n      key: \"twit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, \"\\uC9F9\\uC9F9\", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }), userInfo.Posts), __jsx(\"div\", {\n      key: \"following\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, \"\\uD314\\uB85C\\uC789\", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }), userInfo.Followings), __jsx(\"div\", {\n      key: \"follower\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, \"\\uD314\\uB85C\\uC6CC\", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }), userInfo.Followers)],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 23\n      }\n    }, userInfo.nickname[0]),\n    title: userInfo.nickname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  })) : null, mainPosts.map(c => __jsx(PostCard, {\n    key: c.id,\n    post: c,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_USER_POSTS_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_USER_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n  console.log('getState', context.store.getState().post.mainPosts);\n  return {\n    props: {}\n  };\n});\nexport default User;","map":{"version":3,"sources":["C:/Users/ka/Desktop/react-nodebird/prepare/front/pages/user/[id].js"],"names":["React","useEffect","useDispatch","useSelector","Avatar","Card","END","Head","useRouter","axios","LOAD_USER_POSTS_REQUEST","LOAD_MY_INFO_REQUEST","LOAD_USER_REQUEST","PostCard","wrapper","AppLayout","User","dispatch","router","id","query","mainPosts","hasMorePosts","loadPostsLoading","state","post","userInfo","user","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","type","lastId","length","data","addEventListener","removeEventListener","nickname","Posts","Followings","Followers","map","c","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","params","sagaTask","toPromise","console","log","getState","props"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Avatar, Card } from 'antd';\r\nimport { END } from 'redux-saga';\r\nimport Head from 'next/head';\r\nimport { useRouter } from 'next/router';\r\n\r\nimport axios from 'axios';\r\nimport { LOAD_USER_POSTS_REQUEST } from '../../reducers/post';\r\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from '../../reducers/user';\r\nimport PostCard from '../../components/PostCard';\r\nimport wrapper from '../../store/configureStore';\r\nimport AppLayout from '../../components/AppLayout';\r\n\r\nconst User = () => {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n  const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector((state) => state.post);\r\n  const { userInfo } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    const onScroll = () => {\r\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n        if (hasMorePosts && !loadPostsLoading) {\r\n          dispatch({\r\n            type: LOAD_USER_POSTS_REQUEST,\r\n            lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\r\n            data: id,\r\n          });\r\n        }\r\n      }\r\n    };\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [mainPosts.length, hasMorePosts, id]);\r\n\r\n  return (\r\n    <AppLayout>\r\n      <Head>\r\n        <title>\r\n          {userInfo?.nickname}님의 글\r\n        </title>\r\n        <meta name=\"description\" content={`${userInfo.nickname}님의 게시글`} />\r\n        <meta property=\"og:title\" content={`${userInfo.nickname}님의 게시글`} />\r\n        <meta property=\"og:description\" content={`${userInfo.nickname}님의 게시글`} />\r\n        <meta property=\"og:image\" content=\"https://nodebird.com/favicon.ico\" />\r\n        <meta property=\"og:url\" content={`https://nodebird.com/user/${id}`} />\r\n      </Head>\r\n      {userInfo\r\n        ? (\r\n          <Card\r\n            actions={[\r\n              <div key=\"twit\">\r\n                짹짹\r\n                <br />\r\n                {userInfo.Posts}\r\n              </div>,\r\n              <div key=\"following\">\r\n                팔로잉\r\n                <br />\r\n                {userInfo.Followings}\r\n              </div>,\r\n              <div key=\"follower\">\r\n                팔로워\r\n                <br />\r\n                {userInfo.Followers}\r\n              </div>,\r\n            ]}\r\n          >\r\n            <Card.Meta\r\n              avatar={<Avatar>{userInfo.nickname[0]}</Avatar>}\r\n              title={userInfo.nickname}\r\n            />\r\n          </Card>\r\n        )\r\n        : null}\r\n      {mainPosts.map((c) => (\r\n        <PostCard key={c.id} post={c} />\r\n      ))}\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_USER_POSTS_REQUEST,\r\n    data: context.params.id,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_USER_REQUEST,\r\n    data: context.params.id,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n  console.log('getState', context.store.getState().post.mainPosts);\r\n  return { props: {} };\r\n});\r\n\r\nexport default User;"]},"metadata":{},"sourceType":"module"}