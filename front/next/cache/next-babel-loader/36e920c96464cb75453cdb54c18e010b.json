{"ast":null,"code":"import { all, fork, call, put, takeEvery, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI)\n    yield delay(1000);\n    yield put({\n      type: 'LOG_OUT_SUCCESS',\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_OUT_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data)\n    yield delay(1000);\n    yield put({\n      type: 'ADD_POST_SUCCESS',\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'ADD_POST_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  while (true) {\n    yield takeLatest('LOG_IN_REQUEST', logIn);\n  }\n}\n\nfunction* watchLogOut() {\n  while (true) {\n    yield takeLatest('LOG_OUT_REQUEST', logOut);\n  }\n}\n\nfunction* watchAddPost() {\n  while (true) {\n    yield takeLatest('ADD_POST_REQUEST', addPost);\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchLogIn), //call이랑은 다르다\n  fork(watchLogOut), fork(watchAddPost)]);\n}","map":{"version":3,"sources":["C:/Users/ka/Desktop/react-nodebird/prepare/front/sagas/index.js"],"names":["all","fork","call","put","takeEvery","takeLatest","axios","logOutAPI","post","logOut","delay","type","data","result","err","response","addPostAPI","addPost","action","watchLogIn","logIn","watchLogOut","watchAddPost","rootSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,IAAb,EAAmBC,IAAnB,EAAyBC,GAAzB,EAA8BC,SAA9B,EAAyCC,UAAzC,QAA0D,oBAA1D;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAOA,SAASC,SAAT,GAAqB;AACjB,SAAOD,KAAK,CAACE,IAAN,CAAW,aAAX,CAAP;AACH;;AAGD,UAAUC,MAAV,GAAmB;AACf,MAAI;AACA;AACA,UAAMC,KAAK,CAAC,IAAD,CAAX;AACA,UAAMP,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAE,iBADA;AAENC,MAAAA,IAAI,EAAEC,MAAM,CAACD;AAFP,KAAD,CAAT;AAIH,GAPD,CAOC,OAAME,GAAN,EAAU;AACP,UAAMX,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAE,iBADA;AAENC,MAAAA,IAAI,EAAEE,GAAG,CAACC,QAAJ,CAAaH;AAFb,KAAD,CAAT;AAIH;AAEJ;;AAID,SAASI,UAAT,CAAoBJ,IAApB,EAA0B;AACtB,SAAON,KAAK,CAACE,IAAN,CAAW,WAAX,EAAwBI,IAAxB,CAAP;AACH;;AAGD,UAAUK,OAAV,CAAkBC,MAAlB,EAA0B;AACtB,MAAI;AACA;AACA,UAAMR,KAAK,CAAC,IAAD,CAAX;AACA,UAAMP,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAE,kBADA;AAENC,MAAAA,IAAI,EAAEC,MAAM,CAACD;AAFP,KAAD,CAAT;AAIH,GAPD,CAOC,OAAME,GAAN,EAAU;AACP,UAAMX,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAE,kBADA;AAENC,MAAAA,IAAI,EAAEE,GAAG,CAACC,QAAJ,CAAaH;AAFb,KAAD,CAAT;AAIH;AAEJ;;AAGD,UAAUO,UAAV,GAAuB;AACnB,SAAM,IAAN,EAAW;AACP,UAAMd,UAAU,CAAC,gBAAD,EAAmBe,KAAnB,CAAhB;AACH;AACJ;;AAED,UAAUC,WAAV,GAAwB;AACpB,SAAM,IAAN,EAAW;AACP,UAAMhB,UAAU,CAAC,iBAAD,EAAoBI,MAApB,CAAhB;AACH;AACJ;;AAGD,UAAUa,YAAV,GAAyB;AACrB,SAAM,IAAN,EAAW;AACP,UAAMjB,UAAU,CAAC,kBAAD,EAAqBY,OAArB,CAAhB;AACH;AACJ;;AAID,eAAe,UAAUM,QAAV,GAAqB;AAChC,QAAMvB,GAAG,CAAC,CACNC,IAAI,CAACkB,UAAD,CADE,EACY;AAClBlB,EAAAA,IAAI,CAACoB,WAAD,CAFE,EAGNpB,IAAI,CAACqB,YAAD,CAHE,CAAD,CAAT;AAKH","sourcesContent":["import {all, fork, call, put, takeEvery, takeLatest} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction logOutAPI() {\r\n    return axios.post('/api/logout')\r\n}\r\n\r\n\r\nfunction* logOut() {\r\n    try {\r\n        // const result = yield call(logOutAPI)\r\n        yield delay(1000);\r\n        yield put({\r\n            type: 'LOG_OUT_SUCCESS',\r\n            data: result.data\r\n        })\r\n    }catch(err){\r\n        yield put({\r\n            type: 'LOG_OUT_FAILURE',\r\n            data: err.response.data\r\n        })\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\nfunction addPostAPI(data) {\r\n    return axios.post('/api/post', data)\r\n}\r\n\r\n\r\nfunction* addPost(action) {\r\n    try {\r\n        // const result = yield call(addPostAPI, action.data)\r\n        yield delay(1000);\r\n        yield put({\r\n            type: 'ADD_POST_SUCCESS',\r\n            data: result.data\r\n        })\r\n    }catch(err){\r\n        yield put({\r\n            type: 'ADD_POST_FAILURE',\r\n            data: err.response.data\r\n        })\r\n    }\r\n    \r\n}\r\n\r\n\r\nfunction* watchLogIn() {\r\n    while(true){\r\n        yield takeLatest('LOG_IN_REQUEST', logIn);\r\n    }\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    while(true){\r\n        yield takeLatest('LOG_OUT_REQUEST', logOut);   \r\n    }\r\n}\r\n\r\n\r\nfunction* watchAddPost() {\r\n    while(true){\r\n        yield takeLatest('ADD_POST_REQUEST', addPost);   \r\n    }\r\n}\r\n\r\n\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        fork(watchLogIn), //call이랑은 다르다\r\n        fork(watchLogOut),\r\n        fork(watchAddPost)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}