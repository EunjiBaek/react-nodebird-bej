{"ast":null,"code":"import { delay, put, takeLatest, all, fork } from 'redux-saga/effects';\nimport shortId from 'shortid';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_SFAILURE } from '../reducers/post';\nimport { ADD_POST_TO_ME } from '../reducers/user';\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data)\n    yield delay(1000);\n    const id = shortId.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: action.data\n      }\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete('/api/post', data);\n}\n\nfunction* removePost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data)\n    yield delay(1000);\n    const id = shortId.generate();\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: {\n        id,\n        content: action.data\n      }\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: id\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data)\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(ADD_REMOVE_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchRemovePost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["C:/Users/ka/Desktop/react-nodebird/prepare/front/sagas/post.js"],"names":["delay","put","takeLatest","all","fork","shortId","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_SFAILURE","ADD_POST_TO_ME","addPostAPI","data","axios","post","addPost","action","id","generate","type","content","err","response","removePostAPI","delete","removePost","REMOVE_POST_OF_ME","REMOVE_POST_FAILURE","addCommentAPI","postId","addComment","watchAddPost","watchRemovePost","ADD_REMOVE_REQUEST","watchAddComment","postSaga"],"mappings":"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","sourcesContent":["import { delay, put, takeLatest, all, fork } from 'redux-saga/effects';\r\nimport shortId from 'shortid';\r\nimport {\r\n  ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\r\n  ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE,\r\n  REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_SFAILURE, \r\n} from '../reducers/post';\r\n\r\nimport { ADD_POST_TO_ME } from '../reducers/user';\r\n\r\nfunction addPostAPI(data) {\r\n  return axios.post('/api/post', data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    // const result = yield call(addPostAPI, action.data)\r\n    yield delay(1000);\r\n    const id = shortId.generate();\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: {\r\n        id,\r\n        content: action.data,\r\n      },\r\n    });\r\n    yield put({\r\n      type: ADD_POST_TO_ME,\r\n      data: id, \r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction removePostAPI(data) {\r\n  return axios.delete('/api/post', data);\r\n}\r\n\r\nfunction* removePost(action) {\r\n  try {\r\n    // const result = yield call(addPostAPI, action.data)\r\n    yield delay(1000);\r\n    const id = shortId.generate();\r\n    yield put({\r\n      type: REMOVE_POST_SUCCESS,\r\n      data: {\r\n        id,\r\n        content: action.data,\r\n      },\r\n    });\r\n    yield put({\r\n      type: REMOVE_POST_OF_ME,\r\n      data: id, \r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: REMOVE_POST_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nfunction addCommentAPI(data) {\r\n  return axios.post(`/api/post/${data.postId}/comment`, data);\r\n}\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    // const result = yield call(addPostAPI, action.data)\r\n    yield delay(1000);\r\n    yield put({\r\n      type: ADD_COMMENT_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchRemovePost() {\r\n  yield takeLatest(ADD_REMOVE_REQUEST, removePost);\r\n}\r\n\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchAddPost),\r\n    fork(watchRemovePost),\r\n    fork(watchAddComment),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}