{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ka\\\\Desktop\\\\react-nodebird\\\\prepare\\\\front\\\\components\\\\CommentForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport useInput from '../hooks/useinput';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    return state.state;\n  });\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      commentText = _useInput2[0],\n      setCommentText = _useInput2[1];\n\n  var onChangeCommentText = useCallback(function () {\n    console.log(post.id, commentText);\n  }, [commentText]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, __jsx(Input.Textarea, {\n    value: commentText,\n    onChaage: onChangeCommentText,\n    row: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  })));\n};\n\n_s(CommentForm, \"eFfN/tLTRzZagHgsspuH5YGrXYQ=\", false, function () {\n  return [useSelector, useInput];\n});\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["C:/Users/ka/Desktop/react-nodebird/prepare/front/components/CommentForm.js"],"names":["React","useCallback","useState","Form","Input","Button","useInput","useSelector","PropTypes","CommentForm","post","id","state","commentText","setCommentText","onChangeCommentText","console","log","onSubmitComment","propTypes","object","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,SAAP,MAAsB,YAAtB;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC9B,MAAMC,EAAE,GAAGJ,WAAW,CAAC,UAAAK,KAAK;AAAA,WAAIA,KAAK,CAACA,KAAV;AAAA,GAAN,CAAtB;;AACA,kBAAsCN,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOO,WAAP;AAAA,MAAoBC,cAApB;;AACA,MAAMC,mBAAmB,GAAGd,WAAW,CAAC,YAAM;AAC1Ce,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACC,EAAjB,EAAqBE,WAArB;AACH,GAFsC,EAEpC,CAACA,WAAD,CAFoC,CAAvC;AAIA,SACI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEK,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAEL,WAAvB;AAAoC,IAAA,QAAQ,EAAEE,mBAA9C;AAAmE,IAAA,GAAG,EAAE,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADJ;AASH,CAhBD;;GAAMN,W;UACSF,W,EAC2BD,Q;;;KAFpCG,W;AAkBNA,WAAW,CAACU,SAAZ,GAAwB;AACpBT,EAAAA,IAAI,EAAEF,SAAS,CAACY,MAAV,CAAiBC;AADH,CAAxB;AAOA,eAAeZ,WAAf","sourcesContent":["import React, {useCallback, useState} from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport useInput from '../hooks/useinput';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst CommentForm = ({ post }) => {\r\n    const id = useSelector(state => state.state)\r\n    const [commentText, setCommentText] = useInput('');\r\n    const onChangeCommentText = useCallback(() => {\r\n        console.log(post.id, commentText)\r\n    }, [commentText]);\r\n\r\n    return (\r\n        <Form onFinish={onSubmitComment}>\r\n            <Form.Item>\r\n                <Input.Textarea value={commentText} onChaage={onChangeCommentText} row={4}/>\r\n                <Button type=\"primary\" htmlType=\"submit\"></Button>\r\n\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nCommentForm.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n\r\n}\r\n\r\n\r\n\r\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}