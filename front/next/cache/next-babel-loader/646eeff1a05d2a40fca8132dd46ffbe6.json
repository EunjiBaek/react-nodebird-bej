{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar initialState = {\n  user: {\n    isLoggedIn: false\n  },\n  post: {}\n}; //\n// action creater\n\nvar changeNickname = function changeNickname(data) {\n  return {\n    type: 'CHANGE_NICKNAME',\n    data: data\n  };\n}; // (이전상태, 액션) => 다음상태\n\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'CHANGE_NICKNAME':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        name: action.data\n      });\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/ka/Desktop/react-nodebird/prepare/front/reducers/index.js"],"names":["initialState","user","isLoggedIn","post","changeNickname","data","type","rootReducer","state","action","name"],"mappings":";;;;;;AAAA,IAAMA,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,UAAU,EAAE;AADV,GADW;AAIjBC,EAAAA,IAAI,EAAE;AAJW,CAArB,C,CAUA;AAGA;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAU;AAC7B,SAAO;AACHC,IAAAA,IAAI,EAAE,iBADH;AAEHD,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH,CALD,C,CASA;;;AACA,IAAME,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;;AAClD,UAAQA,MAAM,CAACH,IAAf;AACI,SAAK,iBAAL;AACI,6CACOE,KADP;AAEIE,QAAAA,IAAI,EAAED,MAAM,CAACJ;AAFjB;AAFR;AAOH,CARD;;AAWA,eAAeE,WAAf","sourcesContent":["const initialState = {\r\n    user: {\r\n        isLoggedIn: false,\r\n    },\r\n    post: {\r\n\r\n    }\r\n}\r\n\r\n\r\n//\r\n\r\n\r\n// action creater\r\nconst changeNickname = (data) => {\r\n    return {\r\n        type: 'CHANGE_NICKNAME',\r\n        data\r\n    }\r\n}\r\n\r\n\r\n\r\n// (이전상태, 액션) => 다음상태\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE_NICKNAME':\r\n            return {\r\n                ...state,\r\n                name: action.data\r\n            }\r\n    }\r\n};\r\n\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}