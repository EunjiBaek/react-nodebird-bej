{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nimport reducer from '../reducers';\n\nconst configureStore = () => {\n  const middlewares = [];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/ka/Desktop/react-nodebird/prepare/front/store/configureStore.js"],"names":["createWrapper","applyMiddleware","compose","createStore","composeWithDevTools","thunkMiddleware","reducer","configureStore","middlewares","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,oBAA5B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,OAAOC,OAAP,MAAoB,aAApB;;AAGA,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAMC,WAAW,GAAG,EAApB;AAEA,QAAMC,QAAQ,GAAG,QACXP,OAAO,CAACD,eAAe,CAAC,GAAGO,WAAJ,CAAhB,CADI,GAEXJ,mBAAmB,CAACH,eAAe,CAAC,GAAGO,WAAJ,CAAhB,CAFzB;AAGA,QAAME,KAAK,GAAIP,WAAW,CAACG,OAAD,EAAUG,QAAV,CAA1B;AAEA,SAAOC,KAAP;AACH,CATD;;AAYA,MAAMC,OAAO,GAAGX,aAAa,CAACO,cAAD,EAAiB;AAC1CK,EAAAA,KAAK;AADqC,CAAjB,CAA7B;AAKA,eAAeD,OAAf","sourcesContent":["import {createWrapper} from 'next-redux-wrapper';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nimport reducer from '../reducers'\r\n\r\n\r\nconst configureStore = () => {\r\n    const middlewares = [];\r\n\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n        ? compose(applyMiddleware(...middlewares))\r\n        : composeWithDevTools(applyMiddleware(...middlewares))  \r\n    const store =  createStore(reducer, enhancer);\r\n    \r\n    return store;\r\n}  \r\n\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n    debug: process.env.NODE_ENV === 'development'\r\n});\r\n\r\n\r\nexport default wrapper;\r\n"]},"metadata":{},"sourceType":"module"}