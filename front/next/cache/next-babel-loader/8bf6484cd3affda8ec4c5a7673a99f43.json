{"ast":null,"code":"import { all, fork, put, takeLatest, delay, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE } from '../reducers/user';\n\nfunction changeNicknameAPI() {\n  return axios.get('/user');\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data\n    });\n  }\n} // get이랑 delete는 데이터가 없다.\n\n\nfunction loadUserAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction signupAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signup(action) {\n  try {\n    const result = yield call(signupAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI() {\n  return axios.post('/follow');\n}\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(followAPI)\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI() {\n  return axios.post('/follow');\n}\n\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(unfollowAPI)\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signup);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchChangeNickname), fork(watchLoadUser), fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), // call이랑은 다르다\n  fork(watchLogOut), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["C:/Users/ka/Desktop/react-nodebird/prepare/front/sagas/user.js"],"names":["all","fork","put","takeLatest","delay","call","axios","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","changeNicknameAPI","get","changeNickname","action","result","data","type","err","error","response","loadUserAPI","loadUser","logInAPI","post","logIn","logOutAPI","logOut","signupAPI","signup","console","log","followAPI","follow","unfollowAPI","unfollow","watchChangeNickname","watchLoadUser","watchFollow","watchUnfollow","watchLogIn","watchLogOut","watchSignUp","userSaga"],"mappings":"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","sourcesContent":["import { all, fork, put, takeLatest, delay, call } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n  CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE,\r\n  LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE,\r\n  LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE,\r\n  LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\r\n  SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE,\r\n  FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE,\r\n  UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE,\r\n} from '../reducers/user';\r\n\r\n\r\nfunction changeNicknameAPI() {\r\n  return axios.get('/user');\r\n}\r\n\r\nfunction* changeNickname(action) {\r\n  try {\r\n    const result = yield call(changeNicknameAPI, action.data);\r\n    yield put({\r\n      type: LOAD_USER_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_USER_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// get이랑 delete는 데이터가 없다.\r\nfunction loadUserAPI() {\r\n  return axios.get('/user');\r\n}\r\n\r\nfunction* loadUser(action) {\r\n  try {\r\n    const result = yield call(loadUserAPI, action.data);\r\n    yield put({\r\n      type: LOAD_USER_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_USER_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction logInAPI(data) {\r\n  return axios.post('/user/login', data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    const result = yield call(logInAPI, action.data);\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction logOutAPI() {\r\n  return axios.post('/user/logout');\r\n}\r\n\r\nfunction* logOut() {\r\n  try {\r\n    yield call(logOutAPI);\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction signupAPI(data) {\r\n  return axios.post('/user', data);\r\n}\r\n\r\nfunction* signup(action) {\r\n  try {\r\n    const result = yield call(signupAPI, action.data);\r\n    console.log(result);\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction followAPI() {\r\n  return axios.post('/follow');\r\n}\r\n\r\nfunction* follow(action) {\r\n  try {\r\n    // const result = yield call(followAPI)\r\n    yield delay(1000);\r\n    yield put({\r\n      type: FOLLOW_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: FOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction unfollowAPI() {\r\n  return axios.post('/follow');\r\n}\r\n\r\nfunction* unfollow(action) {\r\n  try {\r\n    // const result = yield call(unfollowAPI)\r\n    yield delay(1000);\r\n    yield put({\r\n      type: UNFOLLOW_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: UNFOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction* watchChangeNickname() {\r\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\r\n}\r\n\r\nfunction* watchLoadUser() {\r\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nfunction* watchFollow() {\r\n  yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signup);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchChangeNickname),\r\n    fork(watchLoadUser),\r\n    fork(watchFollow),\r\n    fork(watchUnfollow),\r\n    fork(watchLogIn), // call이랑은 다르다\r\n    fork(watchLogOut),\r\n    fork(watchSignUp),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}