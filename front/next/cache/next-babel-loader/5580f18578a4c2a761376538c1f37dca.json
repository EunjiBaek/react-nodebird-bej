{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ka\\\\Desktop\\\\react-nodebird\\\\prepare\\\\front\\\\components\\\\CommentForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd'; // eslint-disable-next-line import/order\n\nimport useInput from '../hooks/useinput';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post'; // eslint indent: \"error\"\n\nconst CommentForm = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    addCommentDone,\n    addCommentLoading\n  } = useSelector(state => state.post);\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  const onSubmitComment = useCallback(() => {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        PostId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: 'relative',\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    row: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    style: {\n      position: 'absolute',\n      right: 0,\n      bottom: -40,\n      zIndex: 1\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: addCommentLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"\\uC090\\uC57D\")));\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["C:/Users/ka/Desktop/react-nodebird/prepare/front/components/CommentForm.js"],"names":["React","useCallback","useEffect","Form","Input","Button","useInput","useSelector","useDispatch","PropTypes","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","id","state","user","me","addCommentDone","addCommentLoading","commentText","onChangeCommentText","setCommentText","onSubmitComment","type","data","content","PostId","userId","position","margin","right","bottom","zIndex","propTypes","object","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC,C,CACA;;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,mBAAT,QAAoC,kBAApC,C,CAEA;;AACA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAChC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,EAAE,GAAGP,WAAW,CAAEQ,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;AACA,QAAM;AAAEI,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAAwCZ,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACH,IAAlB,CAAzD;AACA,QAAM,CAACQ,WAAD,EAAcC,mBAAd,EAAmCC,cAAnC,IAAqDhB,QAAQ,CAAC,EAAD,CAAnE;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,cAAJ,EAAoB;AAClBI,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACF,GAJQ,EAIN,CAACJ,cAAD,CAJM,CAAT;AAMA,QAAMK,eAAe,GAAGtB,WAAW,CAAC,MAAM;AACxCY,IAAAA,QAAQ,CAAC;AACPW,MAAAA,IAAI,EAAEd,mBADC;AAEPe,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAEN,WAAX;AAAwBO,QAAAA,MAAM,EAAEf,IAAI,CAACE,EAArC;AAAyCc,QAAAA,MAAM,EAAEd;AAAjD;AAFC,KAAD,CAAR;AAID,GALkC,EAKhC,CAACM,WAAD,EAAcN,EAAd,CALgC,CAAnC;AAOA,SACE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAES,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAE;AAAEM,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,MAAM,EAAE;AAAhC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAEV,WAAvB;AAAoC,IAAA,QAAQ,EAAEC,mBAA9C;AAAmE,IAAA,GAAG,EAAE,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,MAAD;AACE,IAAA,KAAK,EAAE;AAAEQ,MAAAA,QAAQ,EAAE,UAAZ;AAAwBE,MAAAA,KAAK,EAAE,CAA/B;AAAkCC,MAAAA,MAAM,EAAE,CAAC,EAA3C;AAA+CC,MAAAA,MAAM,EAAE;AAAvD,KADT;AACqE,IAAA,IAAI,EAAC,SAD1E;AAEE,IAAA,QAAQ,EAAC,QAFX;AAGE,IAAA,OAAO,EAAEd,iBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADF,CADF;AAaD,CAhCD;;AAkCAR,WAAW,CAACuB,SAAZ,GAAwB;AACtBtB,EAAAA,IAAI,EAAEH,SAAS,CAAC0B,MAAV,CAAiBC;AADD,CAAxB;AAKA,eAAezB,WAAf","sourcesContent":["import React, { useCallback, useEffect } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\n// eslint-disable-next-line import/order\r\nimport useInput from '../hooks/useinput';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\r\n\r\n// eslint indent: \"error\"\r\nconst CommentForm = ({ post }) => {\r\n  const dispatch = useDispatch();\r\n  const id = useSelector((state) => state.user.me?.id);\r\n  const { addCommentDone, addCommentLoading } = useSelector((state) => state.post);\r\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\r\n\r\n  useEffect(() => {\r\n    if (addCommentDone) {\r\n      setCommentText('');\r\n    }\r\n  }, [addCommentDone]);\r\n\r\n  const onSubmitComment = useCallback(() => {\r\n    dispatch({\r\n      type: ADD_COMMENT_REQUEST,\r\n      data: { content: commentText, PostId: post.id, userId: id },\r\n    });\r\n  }, [commentText, id]);\r\n\r\n  return (\r\n    <Form onFinish={onSubmitComment}>\r\n      <Form.Item style={{ position: 'relative', margin: 0 }}>\r\n        <Input.TextArea value={commentText} onChange={onChangeCommentText} row={4} />\r\n        <Button\r\n          style={{ position: 'absolute', right: 0, bottom: -40, zIndex: 1 }} type=\"primary\" \r\n          htmlType=\"submit\"\r\n          loading={addCommentLoading}\r\n          >삐약</Button>\r\n\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n\r\n};\r\n\r\nexport default CommentForm;\r\n"]},"metadata":{},"sourceType":"module"}