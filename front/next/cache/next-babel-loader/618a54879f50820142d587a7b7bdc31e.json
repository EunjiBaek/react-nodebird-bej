{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect } from 'react';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport { Form, Input, Checkbox, Button } from 'antd';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AppLayout from '../components/AppLayout';\nimport useinput from '../hooks/useinput';\nimport { SIGN_UP_REQUEST } from '../reducers/user';\nvar ErrorMessage = styled.div.withConfig({\n  displayName: \"signup__ErrorMessage\",\n  componentId: \"sc-1oeks01-0\"\n})([\"color:red;\"]);\n\nvar Signup = function Signup() {\n  var _useinput = useinput(''),\n      _useinput2 = _slicedToArray(_useinput, 2),\n      email = _useinput2[0],\n      onChangeEmail = _useinput2[1];\n\n  var _useinput3 = useinput(''),\n      _useinput4 = _slicedToArray(_useinput3, 2),\n      nickname = _useinput4[0],\n      onChangeNickname = _useinput4[1];\n\n  var _useinput5 = useinput(''),\n      _useinput6 = _slicedToArray(_useinput5, 2),\n      password = _useinput6[0],\n      onChangePassword = _useinput6[1];\n\n  var _useState = useState(''),\n      passwordCheck = _useState[0],\n      setPasswordCheck = _useState[1];\n\n  var _useState2 = useState(false),\n      passwordError = _useState2[0],\n      setPasswordError = _useState2[1];\n\n  var _useState3 = useState(''),\n      term = _useState3[0],\n      setTerm = _useState3[1];\n\n  var _useState4 = useState(false),\n      termError = _useState4[0],\n      setTermError = _useState4[1];\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      signUpLoading = _useSelector.signUpLoading,\n      signUpDone = _useSelector.signUpDone,\n      signUpError = _useSelector.signUpError,\n      me = _useSelector.me;\n\n  useEffect(function () {\n    if (me && me.id) {\n      Router.replace('/'); // replace는 페이지가 사라진다 뒤로가기가 안된다.\n    }\n  }, [me && me.id]);\n  useEffect(function () {\n    if (signUpDone) {\n      Router.replace('/');\n    }\n  }, [signUpDone]);\n  useEffect(function () {\n    if (signUpError) {\n      alert(signUpError);\n    }\n  }, [signUpError]);\n  var onSubmit = useCallback(function () {\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    return dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        email: email,\n        password: password,\n        nickname: nickname\n      }\n    });\n  }, [email, password, passwordCheck, term, nickname]);\n  var onChangePasswordCheck = useCallback(function (e) {\n    setPasswordCheck(e.target.value);\n    setPasswordError(e.target.value !== password);\n  }, [password]);\n  var onChangeTerm = useCallback(function (e) {\n    setTerm(e.target.checked);\n    setTermError(false);\n  }, []);\n  return __jsx(AppLayout, null, __jsx(Head, null, __jsx(\"title\", null, \"\\uD68C\\uC6D0\\uAC00\\uC785 | Nodebird\")), __jsx(Form, {\n    onFinish: onSubmit\n  }, __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-email\"\n  }, \"\\uC774\\uBA54\\uC77C\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-email\",\n    type: \"email\",\n    value: email,\n    required: true,\n    onChange: onChangeEmail\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-nick\"\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-nick\",\n    value: nickname,\n    required: true,\n    onChange: onChangeNickname\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-password\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", null), __jsx(Input.Password, {\n    name: \"user-password\",\n    value: password,\n    required: true,\n    onChange: onChangePassword\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-password-check\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uCCB4\\uD06C\"), __jsx(\"br\", null), __jsx(Input.Password, {\n    name: \"user-password-check\",\n    value: passwordCheck,\n    required: true,\n    onChange: onChangePasswordCheck\n  }), passwordError && __jsx(ErrorMessage, null, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\")), __jsx(\"div\", null, __jsx(Checkbox, {\n    name: \"user-term\",\n    checked: term,\n    onChange: onChangeTerm\n  }, \"\\uBC31\\uC740\\uC9C0\\uC758 \\uB9D0\\uC5D0 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"), termError && __jsx(ErrorMessage, null, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n    style: {\n      marginTop: 10\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: signUpLoading\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\"))));\n};\n\nexport var __N_SSP = true;\nexport default Signup;","map":{"version":3,"sources":["C:/Users/ka/Desktop/react-nodebird/prepare/front/pages/signup.js"],"names":["React","useCallback","useState","useEffect","Head","Router","Form","Input","Checkbox","Button","styled","useDispatch","useSelector","AppLayout","useinput","SIGN_UP_REQUEST","ErrorMessage","div","Signup","email","onChangeEmail","nickname","onChangeNickname","password","onChangePassword","passwordCheck","setPasswordCheck","passwordError","setPasswordError","term","setTerm","termError","setTermError","dispatch","state","user","signUpLoading","signUpDone","signUpError","me","id","replace","alert","onSubmit","type","data","onChangePasswordCheck","e","target","value","onChangeTerm","checked","marginTop"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\r\nimport Head from 'next/head';\r\nimport Router from 'next/router';\r\nimport { END } from 'redux-saga';\r\nimport axios from 'axios';\r\n\r\nimport { Form, Input, Checkbox, Button } from 'antd';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AppLayout from '../components/AppLayout';\r\nimport useinput from '../hooks/useinput';\r\nimport { SIGN_UP_REQUEST, LOAD_MY_INFO_REQUEST } from '../reducers/user';\r\nimport wrapper from '../store/configureStore';\r\n\r\nconst ErrorMessage = styled.div`\r\n    color: red;\r\n`;\r\n\r\nconst Signup = () => {\r\n  const [email, onChangeEmail] = useinput('');\r\n  const [nickname, onChangeNickname] = useinput('');\r\n  const [password, onChangePassword] = useinput('');\r\n\r\n  const [passwordCheck, setPasswordCheck] = useState('');\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const [term, setTerm] = useState('');\r\n  const [termError, setTermError] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const { signUpLoading, signUpDone, signUpError, me } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    if (me && me.id) {\r\n      Router.replace('/'); // replace는 페이지가 사라진다 뒤로가기가 안된다.\r\n    }\r\n  }, [me && me.id]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (signUpDone) {\r\n      Router.replace('/');\r\n    }\r\n  }, [signUpDone]);\r\n\r\n  useEffect(() => {\r\n    if (signUpError) {\r\n      alert(signUpError);\r\n    }\r\n  }, [signUpError]);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    if (password !== passwordCheck) {\r\n      return setPasswordError(true);\r\n    }\r\n\r\n    if (!term) {\r\n      return setTermError(true);\r\n    }\r\n    return dispatch({\r\n      type: SIGN_UP_REQUEST,\r\n      data: { email, password, nickname },\r\n    });\r\n  }, [email, password, passwordCheck, term, nickname]);\r\n\r\n  const onChangePasswordCheck = useCallback((e) => {\r\n    setPasswordCheck(e.target.value);\r\n    setPasswordError(e.target.value !== password);\r\n  }, [password]);\r\n\r\n  const onChangeTerm = useCallback((e) => {\r\n    setTerm(e.target.checked);\r\n    setTermError(false);\r\n  }, []);\r\n\r\n  return (\r\n    <AppLayout>\r\n      <Head>\r\n        <title>회원가입 | Nodebird</title>\r\n      </Head>\r\n      <Form onFinish={onSubmit}>\r\n        <div>\r\n          <label htmlFor=\"user-email\">이메일</label>\r\n          <br />\r\n          <Input name=\"user-email\" type=\"email\" value={email} required onChange={onChangeEmail} />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"user-nick\">닉네임</label>\r\n          <br />\r\n          <Input name=\"user-nick\" value={nickname} required onChange={onChangeNickname} />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"user-password\">비밀번호</label>\r\n          <br />\r\n          <Input.Password name=\"user-password\" value={password} required onChange={onChangePassword} />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"user-password-check\">비밀번호체크</label>\r\n          <br />\r\n          <Input.Password\r\n            name=\"user-password-check\"\r\n            value={passwordCheck}\r\n            required\r\n            onChange={onChangePasswordCheck}\r\n          />\r\n\r\n          {passwordError && <ErrorMessage>비밀번호가 일치하지 않습니다.</ErrorMessage>}\r\n        </div>\r\n        <div>\r\n          <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>백은지의 말에 동의합니다.</Checkbox>\r\n          {termError && <ErrorMessage>약관에 동의하셔야 합니다.</ErrorMessage>}\r\n        </div>\r\n\r\n        <div style={{ marginTop: 10 }}>\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={signUpLoading}>가입하기</Button>\r\n        </div>\r\n\r\n      </Form>\r\n\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}