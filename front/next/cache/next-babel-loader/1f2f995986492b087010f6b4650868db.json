{"ast":null,"code":"import { all, fork, put, takeLatest, delay } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    console.log('saga login'); // const result = yield call(logInAPI, action.data)\n\n    yield delay(1000);\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI)\n    yield delay(1000);\n    yield put({\n      type: 'LOG_OUT_SUCCESS'\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_OUT_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest('LOG_IN_REQUEST', logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest('LOG_OUT_REQUEST', logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), //call이랑은 다르다\n  fork(watchLogOut)]);\n}","map":{"version":3,"sources":["C:/Users/ka/Desktop/react-nodebird/prepare/front/sagas/user.js"],"names":["all","fork","put","takeLatest","delay","axios","logInAPI","data","post","logIn","action","console","log","type","err","error","response","logOutAPI","logOut","watchLogIn","watchLogOut","userSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,IAAb,EAAmBC,GAAnB,EAAwBC,UAAxB,EAAoCC,KAApC,QAAgD,oBAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACpB,SAAOF,KAAK,CAACG,IAAN,CAAW,YAAX,EAAyBD,IAAzB,CAAP;AACH;;AAGD,UAAUE,KAAV,CAAgBC,MAAhB,EAAwB;AACpB,MAAI;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EADA,CAEA;;AACA,UAAMR,KAAK,CAAC,IAAD,CAAX;AACA,UAAMF,GAAG,CAAC;AACNW,MAAAA,IAAI,EAAE,gBADA;AAENN,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAFP,KAAD,CAAT;AAIH,GARD,CAQC,OAAMO,GAAN,EAAU;AACP,UAAMZ,GAAG,CAAC;AACNW,MAAAA,IAAI,EAAE,gBADA;AAENE,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaT;AAFd,KAAD,CAAT;AAIH;AAEJ;;AAED,SAASU,SAAT,GAAqB;AACjB,SAAOZ,KAAK,CAACG,IAAN,CAAW,aAAX,CAAP;AACH;;AAGD,UAAUU,MAAV,GAAmB;AACf,MAAI;AACA;AACA,UAAMd,KAAK,CAAC,IAAD,CAAX;AACA,UAAMF,GAAG,CAAC;AACNW,MAAAA,IAAI,EAAE;AADA,KAAD,CAAT;AAGH,GAND,CAMC,OAAMC,GAAN,EAAU;AACP,UAAMZ,GAAG,CAAC;AACNW,MAAAA,IAAI,EAAE,iBADA;AAENN,MAAAA,IAAI,EAAEO,GAAG,CAACE,QAAJ,CAAaT;AAFb,KAAD,CAAT;AAIH;AAEJ;;AAID,UAAUY,UAAV,GAAuB;AACnB,QAAMhB,UAAU,CAAC,gBAAD,EAAmBM,KAAnB,CAAhB;AACH;;AAED,UAAUW,WAAV,GAAwB;AACpB,QAAMjB,UAAU,CAAC,iBAAD,EAAoBe,MAApB,CAAhB;AACH;;AAGD,eAAe,UAAUG,QAAV,GAAqB;AAChC,QAAMrB,GAAG,CAAC,CACNC,IAAI,CAACkB,UAAD,CADE,EACY;AAClBlB,EAAAA,IAAI,CAACmB,WAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import {all, fork, put, takeLatest, delay} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\nfunction logInAPI(data) {\r\n    return axios.post('/api/login', data)\r\n}\r\n\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        console.log('saga login');\r\n        // const result = yield call(logInAPI, action.data)\r\n        yield delay(1000);\r\n        yield put({\r\n            type: 'LOG_IN_SUCCESS',\r\n            data: action.data\r\n        })\r\n    }catch(err){\r\n        yield put({\r\n            type: 'LOG_IN_FAILURE',\r\n            error: err.response.data\r\n        })\r\n    }\r\n    \r\n}\r\n\r\nfunction logOutAPI() {\r\n    return axios.post('/api/logout')\r\n}\r\n\r\n\r\nfunction* logOut() {\r\n    try {\r\n        // const result = yield call(logOutAPI)\r\n        yield delay(1000);\r\n        yield put({\r\n            type: 'LOG_OUT_SUCCESS',\r\n        })\r\n    }catch(err){\r\n        yield put({\r\n            type: 'LOG_OUT_FAILURE',\r\n            data: err.response.data\r\n        })\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\nfunction* watchLogIn() {\r\n    yield takeLatest('LOG_IN_REQUEST', logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    yield takeLatest('LOG_OUT_REQUEST', logOut);   \r\n}\r\n\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogIn), //call이랑은 다르다\r\n        fork(watchLogOut),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}