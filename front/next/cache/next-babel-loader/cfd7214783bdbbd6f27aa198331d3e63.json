{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ka\\\\Desktop\\\\react-nodebird\\\\prepare\\\\front\\\\pages\\\\post\\\\[id].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n// post/[id].js -> id가 계속 바뀐다\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport { useSelector } from 'react-redux';\n// 단일게시물 가져오기\nimport AppLayout from '../../components/AppLayout';\nimport PostCard from '../../components/PostCard';\n\nvar Post = function Post() {\n  _s();\n\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      singlePost = _useSelector.singlePost;\n\n  return __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(PostCard, {\n    post: singlePost,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(Post, \"mnFtsSWNkMUCzNZlr05ZwL2ppco=\", false, function () {\n  return [useRouter, useSelector];\n});\n\n_c = Post;\nexport var __N_SSP = true;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/ka/Desktop/react-nodebird/prepare/front/pages/post/[id].js"],"names":["React","useRouter","useSelector","AppLayout","PostCard","Post","router","id","query","state","post","singlePost"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAGA,SAASC,WAAT,QAA4B,aAA5B;AAIyD;AACzD,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;AAIA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACf,MAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,MAAQM,EAAR,GAAeD,MAAM,CAACE,KAAtB,CAAQD,EAAR;;AACA,qBAAuBL,WAAW,CAAC,UAACO,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAAlC;AAAA,MAAQC,UAAR,gBAAQA,UAAR;;AAEA,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAMH,CAXD;;GAAMN,I;UACaJ,S,EAEQC,W;;;KAHrBG,I;;AA+BN,eAAeA,IAAf","sourcesContent":["// post/[id].js -> id가 계속 바뀐다\r\nimport React from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport { END } from 'redux-saga';\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport wrapper from '../../store/configureStore';\r\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\r\nimport { LOAD_POST_REQUEST } from '../../reducers/post'; // 단일게시물 가져오기\r\nimport AppLayout from '../../components/AppLayout';\r\nimport PostCard from '../../components/PostCard';\r\n\r\n\r\n\r\nconst Post = () => {\r\n    const router = useRouter();\r\n    const { id } = router.query;\r\n    const { singlePost } = useSelector((state) => state.post);\r\n\r\n    return (\r\n        <AppLayout>\r\n            <PostCard post={singlePost}/>\r\n        </AppLayout>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch({\r\n        type: LOAD_POST_REQUEST,\r\n        data: context.params.id,\r\n    });\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Post;"]},"metadata":{},"sourceType":"module"}