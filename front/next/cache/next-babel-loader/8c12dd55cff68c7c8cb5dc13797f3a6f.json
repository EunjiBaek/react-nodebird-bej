{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ka\\\\Desktop\\\\react-nodebird\\\\prepare\\\\front\\\\components\\\\CommentForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport useInput from '../hooks/useinput';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\nimport { addpost } from '../reducers/post';\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      commentText = _useInput2[0],\n      onChangeCommentText = _useInput2[1];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (addPostDone) {\n      commentText('');\n    }\n  }, [addPostDone]);\n  var onSubmitComment = useCallback(function () {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: 'relative',\n      margin: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    row: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    style: {\n      position: 'absolute',\n      right: 0,\n      bottom: -40\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"\\uC090\\uC57D\")));\n};\n\n_s(CommentForm, \"2aJCUi/fDxMqC1yh0YN4bGnin54=\", false, function () {\n  return [useSelector, useInput, useDispatch];\n});\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["C:/Users/ka/Desktop/react-nodebird/prepare/front/components/CommentForm.js"],"names":["React","useCallback","useState","useEffect","Form","Input","Button","useInput","useSelector","useDispatch","PropTypes","ADD_COMMENT_REQUEST","addpost","CommentForm","post","id","state","user","me","commentText","onChangeCommentText","dispatch","addPostDone","onSubmitComment","type","data","content","postId","userId","position","margin","right","bottom","propTypes","object","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAsD,OAAtD;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,mBAAT,QAAoC,kBAApC;AACA,SAAQC,OAAR,QAAsB,kBAAtB;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC9B,MAAMC,EAAE,GAAGP,WAAW,CAAC,UAAAQ,KAAK;AAAA;;AAAA,6BAAIA,KAAK,CAACC,IAAN,CAAWC,EAAf,mDAAI,eAAeH,EAAnB;AAAA,GAAN,CAAtB;;AACA,kBAA2CR,QAAQ,CAAC,EAAD,CAAnD;AAAA;AAAA,MAAOY,WAAP;AAAA,MAAoBC,mBAApB;;AAEA,MAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AAEAN,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAGmB,WAAH,EAAe;AACXH,MAAAA,WAAW,CAAC,EAAD,CAAX;AACH;AACJ,GAJQ,EAIN,CAACG,WAAD,CAJM,CAAT;AAMA,MAAMC,eAAe,GAAGtB,WAAW,CAAC,YAAM;AACtCoB,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEb,mBADD;AAELc,MAAAA,IAAI,EAAE;AAACC,QAAAA,OAAO,EAAEP,WAAV;AAAuBQ,QAAAA,MAAM,EAAEb,IAAI,CAACC,EAApC;AAAwCa,QAAAA,MAAM,EAAEb;AAAhD;AAFD,KAAD,CAAR;AAIH,GALkC,EAKhC,CAACI,WAAD,EAAcJ,EAAd,CALgC,CAAnC;AAOA,SACI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEQ,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAE;AAACM,MAAAA,QAAQ,EAAE,UAAX;AAAuBC,MAAAA,MAAM,EAAE;AAA/B,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAEX,WAAvB;AAAoC,IAAA,QAAQ,EAAEC,mBAA9C;AAAmE,IAAA,GAAG,EAAE,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAES,MAAAA,QAAQ,EAAE,UAAZ;AAAwBE,MAAAA,KAAK,EAAE,CAA/B;AAAkCC,MAAAA,MAAM,EAAE,CAAC;AAA3C,KAAf;AAA+D,IAAA,IAAI,EAAC,SAApE;AAA8E,IAAA,QAAQ,EAAC,QAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CADJ,CADJ;AASH,CA5BD;;GAAMnB,W;UACSL,W,EACgCD,Q,EAE1BE,W;;;KAJfI,W;AA8BNA,WAAW,CAACoB,SAAZ,GAAwB;AACpBnB,EAAAA,IAAI,EAAEJ,SAAS,CAACwB,MAAV,CAAiBC;AADH,CAAxB;AAOA,eAAetB,WAAf","sourcesContent":["import React, {useCallback, useState, useEffect} from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport useInput from '../hooks/useinput';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\r\nimport {addpost} from '../reducers/post';\r\n\r\n\r\nconst CommentForm = ({ post }) => {\r\n    const id = useSelector(state => state.user.me?.id);\r\n    const [commentText, onChangeCommentText] = useInput('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(addPostDone){\r\n            commentText('');\r\n        }   \r\n    }, [addPostDone])\r\n\r\n    const onSubmitComment = useCallback(() => {\r\n        dispatch({\r\n            type: ADD_COMMENT_REQUEST,\r\n            data: {content: commentText, postId: post.id, userId: id},\r\n        })\r\n    }, [commentText, id]);\r\n\r\n    return (\r\n        <Form onFinish={onSubmitComment}>\r\n            <Form.Item style={{position: 'relative', margin: 0}}>\r\n                <Input.TextArea value={commentText} onChange={onChangeCommentText} row={4}/>\r\n                <Button style={{ position: 'absolute', right: 0, bottom: -40}} type=\"primary\" htmlType=\"submit\">삐약</Button>\r\n\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nCommentForm.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n\r\n}\r\n\r\n\r\n\r\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}