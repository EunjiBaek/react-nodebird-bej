{"ast":null,"code":"import { all, fork, call, put, take } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction logInAPI(data) {\n  return axios.post('/api/login');\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* logOut() {\n  try {\n    const result = yield call(logOutAPI);\n    yield put({\n      type: 'LOG_OUT_SUCCESS',\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_OUT_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: 'ADD_POST_SUCCESS',\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'ADD_POST_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield take('LOG_IN_REQUEST', logIn);\n}\n\nfunction* watchLogOut() {\n  yield take('LOG_OUT_REQUEST', logOut);\n}\n\nfunction* watchAddPost() {\n  yield take('ADD_POST_REQUEST', addPost);\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchLogIn), //call이랑은 다르다\n  fork(watchLogOut), fork(watchAddPost)]);\n}","map":{"version":3,"sources":["C:/Users/ka/Desktop/react-nodebird/prepare/front/sagas/index.js"],"names":["all","fork","call","put","take","axios","logInAPI","data","post","logIn","action","result","type","err","response","logOutAPI","logOut","addPostAPI","addPost","watchLogIn","watchLogOut","watchAddPost","rootSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,IAAb,EAAmBC,IAAnB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAAyC,oBAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACpB,SAAOF,KAAK,CAACG,IAAN,CAAW,YAAX,CAAP;AACH;;AAID,UAAUC,KAAV,CAAgBC,MAAhB,EAAwB;AACpB,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMT,IAAI,CAACI,QAAD,EAAWI,MAAM,CAACH,IAAlB,CAAzB;AACA,UAAMJ,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAE,gBADA;AAENL,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFP,KAAD,CAAT;AAIH,GAND,CAMC,OAAMM,GAAN,EAAU;AACP,UAAMV,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAE,gBADA;AAENL,MAAAA,IAAI,EAAEM,GAAG,CAACC,QAAJ,CAAaP;AAFb,KAAD,CAAT;AAIH;AAEJ;;AAKD,SAASQ,SAAT,GAAqB;AACjB,SAAOV,KAAK,CAACG,IAAN,CAAW,aAAX,CAAP;AACH;;AAGD,UAAUQ,MAAV,GAAmB;AACf,MAAI;AACA,UAAML,MAAM,GAAG,MAAMT,IAAI,CAACa,SAAD,CAAzB;AACA,UAAMZ,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAE,iBADA;AAENL,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFP,KAAD,CAAT;AAIH,GAND,CAMC,OAAMM,GAAN,EAAU;AACP,UAAMV,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAE,iBADA;AAENL,MAAAA,IAAI,EAAEM,GAAG,CAACC,QAAJ,CAAaP;AAFb,KAAD,CAAT;AAIH;AAEJ;;AAID,SAASU,UAAT,CAAoBV,IAApB,EAA0B;AACtB,SAAOF,KAAK,CAACG,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACH;;AAGD,UAAUW,OAAV,CAAkBR,MAAlB,EAA0B;AACtB,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMT,IAAI,CAACe,UAAD,EAAaP,MAAM,CAACH,IAApB,CAAzB;AACA,UAAMJ,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAE,kBADA;AAENL,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFP,KAAD,CAAT;AAIH,GAND,CAMC,OAAMM,GAAN,EAAU;AACP,UAAMV,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAE,kBADA;AAENL,MAAAA,IAAI,EAAEM,GAAG,CAACC,QAAJ,CAAaP;AAFb,KAAD,CAAT;AAIH;AAEJ;;AAGD,UAAUY,UAAV,GAAuB;AACnB,QAAMf,IAAI,CAAC,gBAAD,EAAmBK,KAAnB,CAAV;AACH;;AAED,UAAUW,WAAV,GAAwB;AACpB,QAAMhB,IAAI,CAAC,iBAAD,EAAoBY,MAApB,CAAV;AACH;;AAGD,UAAUK,YAAV,GAAyB;AACrB,QAAMjB,IAAI,CAAC,kBAAD,EAAqBc,OAArB,CAAV;AACH;;AAID,eAAe,UAAUI,QAAV,GAAqB;AAChC,QAAMtB,GAAG,CAAC,CACNC,IAAI,CAACkB,UAAD,CADE,EACY;AAClBlB,EAAAA,IAAI,CAACmB,WAAD,CAFE,EAGNnB,IAAI,CAACoB,YAAD,CAHE,CAAD,CAAT;AAKH","sourcesContent":["import {all, fork, call, put, take} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\nfunction logInAPI(data) {\r\n    return axios.post('/api/login')\r\n}\r\n\r\n\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        const result = yield call(logInAPI, action.data)\r\n        yield put({\r\n            type: 'LOG_IN_SUCCESS',\r\n            data: result.data\r\n        })\r\n    }catch(err){\r\n        yield put({\r\n            type: 'LOG_IN_FAILURE',\r\n            data: err.response.data\r\n        })\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nfunction logOutAPI() {\r\n    return axios.post('/api/logout')\r\n}\r\n\r\n\r\nfunction* logOut() {\r\n    try {\r\n        const result = yield call(logOutAPI)\r\n        yield put({\r\n            type: 'LOG_OUT_SUCCESS',\r\n            data: result.data\r\n        })\r\n    }catch(err){\r\n        yield put({\r\n            type: 'LOG_OUT_FAILURE',\r\n            data: err.response.data\r\n        })\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\nfunction addPostAPI(data) {\r\n    return axios.post('/api/post', data)\r\n}\r\n\r\n\r\nfunction* addPost(action) {\r\n    try {\r\n        const result = yield call(addPostAPI, action.data)\r\n        yield put({\r\n            type: 'ADD_POST_SUCCESS',\r\n            data: result.data\r\n        })\r\n    }catch(err){\r\n        yield put({\r\n            type: 'ADD_POST_FAILURE',\r\n            data: err.response.data\r\n        })\r\n    }\r\n    \r\n}\r\n\r\n\r\nfunction* watchLogIn() {\r\n    yield take('LOG_IN_REQUEST', logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    yield take('LOG_OUT_REQUEST', logOut);\r\n}\r\n\r\n\r\nfunction* watchAddPost() {\r\n    yield take('ADD_POST_REQUEST', addPost);\r\n}\r\n\r\n\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        fork(watchLogIn), //call이랑은 다르다\r\n        fork(watchLogOut),\r\n        fork(watchAddPost)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}