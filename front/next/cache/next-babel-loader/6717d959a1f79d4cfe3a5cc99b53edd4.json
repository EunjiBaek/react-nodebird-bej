{"ast":null,"code":"import { delay, put, takeLatest, all, fork } from \"redux-saga/effects\";\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_ERROR } from '../reducers/post';\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data)\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_ERROR\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data)\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_ERROR\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["C:/Users/ka/Desktop/react-nodebird/prepare/front/sagas/post.js"],"names":["delay","put","takeLatest","all","fork","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_ERROR","addPostAPI","data","axios","post","addPost","action","type","err","addCommentAPI","postId","addComment","ADD_COMMENT_SUCCESS","ADD_COMMENT_ERROR","watchAddPost","watchAddComment","ADD_COMMENT_REQUEST","postSaga"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,GAAhB,EAAqBC,UAArB,EAAiCC,GAAjC,EAAsCC,IAAtC,QAAkD,oBAAlD;AACA,SACIC,gBADJ,EACsBC,gBADtB,EACwCC,cADxC,QAEO,kBAFP;;AAKA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtB,SAAOC,KAAK,CAACC,IAAN,CAAW,WAAX,EAAwBF,IAAxB,CAAP;AACH;;AAGD,UAAUG,OAAV,CAAkBC,MAAlB,EAA0B;AACtB,MAAI;AACA;AACA,UAAMb,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACNa,MAAAA,IAAI,EAAER,gBADA;AAENG,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFP,KAAD,CAAT;AAIH,GAPD,CAOC,OAAMM,GAAN,EAAU;AACP,UAAMd,GAAG,CAAC;AACNa,MAAAA,IAAI,EAAEP;AADA,KAAD,CAAT;AAGH;AACJ;;AAGD,SAASS,aAAT,CAAuBP,IAAvB,EAA6B;AACzB,SAAOC,KAAK,CAACC,IAAN,CAAY,aAAYF,IAAI,CAACQ,MAAO,UAApC,EAA+CR,IAA/C,CAAP;AACH;;AAGD,UAAUS,UAAV,CAAqBL,MAArB,EAA6B;AACzB,MAAI;AACA;AACA,UAAMb,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACNa,MAAAA,IAAI,EAAEK,mBADA;AAENV,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFP,KAAD,CAAT;AAIH,GAPD,CAOC,OAAMM,GAAN,EAAU;AACP,UAAMd,GAAG,CAAC;AACNa,MAAAA,IAAI,EAAEM;AADA,KAAD,CAAT;AAGH;AACJ;;AAMD,UAAUC,YAAV,GAAyB;AACrB,QAAMnB,UAAU,CAACG,gBAAD,EAAmBO,OAAnB,CAAhB;AACH;;AAED,UAAUU,eAAV,GAA4B;AACxB,QAAMpB,UAAU,CAACqB,mBAAD,EAAsBL,UAAtB,CAAhB;AACH;;AAGD,eAAe,UAAUM,QAAV,GAAoB;AAC/B,QAAMrB,GAAG,CAAC,CACNC,IAAI,CAACiB,YAAD,CADE,EAENjB,IAAI,CAACkB,eAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { delay, put, takeLatest, all, fork } from \"redux-saga/effects\";\r\nimport {\r\n    ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_ERROR,\r\n} from '../reducers/post';\r\n\r\n\r\nfunction addPostAPI(data) {\r\n    return axios.post('/api/post', data)\r\n}\r\n\r\n\r\nfunction* addPost(action) {\r\n    try {\r\n        // const result = yield call(addPostAPI, action.data)\r\n        yield delay(1000);\r\n        yield put({\r\n            type: ADD_POST_SUCCESS,\r\n            data: action.data\r\n        })\r\n    }catch(err){\r\n        yield put({\r\n            type: ADD_POST_ERROR,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nfunction addCommentAPI(data) {\r\n    return axios.post(`/api/post/${data.postId}/comment`, data)\r\n}\r\n\r\n\r\nfunction* addComment(action) {\r\n    try {\r\n        // const result = yield call(addPostAPI, action.data)\r\n        yield delay(1000);\r\n        yield put({\r\n            type: ADD_COMMENT_SUCCESS,\r\n            data: action.data\r\n        })\r\n    }catch(err){\r\n        yield put({\r\n            type: ADD_COMMENT_ERROR,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction* watchAddPost() {\r\n    yield takeLatest(ADD_POST_REQUEST, addPost);   \r\n}\r\n\r\nfunction* watchAddComment() {\r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);   \r\n}\r\n\r\n\r\nexport default function* postSaga(){\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchAddComment)\r\n    ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}