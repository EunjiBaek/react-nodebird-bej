{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ka\\\\Desktop\\\\react-nodebird\\\\prepare\\\\front\\\\pages\\\\profile.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport axios from 'axios';\nimport useSWR from 'swr';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Router from 'next/router';\nimport AppLayout from '../components/AppLayout';\nimport NicknameEditForm from '../components/NicknameEditForm';\nimport FollowList from '../components/FollowList';\n\nvar fetcher = function fetcher(url) {\n  return axios.get(url, {\n    widthCredentials: true\n  }).then(function (result) {\n    return result.data;\n  });\n};\n\nvar Profile = function Profile() {\n  _s();\n\n  var dispatch = useDispatch(); // const followerList = [{ nickname: '제로초' }, { nickname: '바보' }, { nickname: '노드버드오피셜' }];\n  // const followingList = [{ nickname: '제로초' }, { nickname: '바보' }, { nickname: '노드버드오피셜' }];\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useState = useState(3),\n      followersLimit = _useState[0],\n      setFollowersLimit = _useState[1]; // dispatch대신에 써줄수 있다.\n\n\n  var _useSWR = useSWR(\"http://localhost:3065/user/followers?limit=\".concat(followersLimit), fetcher),\n      followersData = _useSWR.data,\n      followerError = _useSWR.error;\n\n  var _useSWR2 = useSWR(\"http://localhost:3065/user/followings?limit=\".concat(followingsLimit), fetcher),\n      followingsData = _useSWR2.data,\n      followingError = _useSWR2.error; // useEffect(() => {\n  //   dispatch({\n  //     type: LOAD_FOLLOWERS_REQUEST,\n  //   });\n  //   dispatch({\n  //     type: LOAD_FOLLOWINGS_REQUEST,\n  //   });\n  // }, []);\n\n\n  useEffect(function () {\n    if (!(me && me.id)) {\n      Router.push('/');\n    }\n  }, [me && me.id]);\n\n  if (!me) {\n    return '내 정보 로딩중...';\n  }\n\n  if (followerError || followingError) {\n    console.error(followerError || followingError);\n    return '팔로잉/팔로워 로딩 중 에러가 발생합니다.';\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"\\uB0B4 \\uD504\\uB85C\\uD544 | Nodebird\")), __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, __jsx(NicknameEditForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), __jsx(FollowList, {\n    header: \"\\uD314\\uB85C\\uC789\",\n    data: followingsData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), __jsx(FollowList, {\n    header: \"\\uD314\\uB85C\\uC6CC\",\n    data: followersData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(Profile, \"2Ph7Hq4rLOrffUIkc6czJbS33LQ=\", false, function () {\n  return [useDispatch, useSelector, useSWR, useSWR];\n});\n\n_c = Profile;\nexport var __N_SSP = true;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/ka/Desktop/react-nodebird/prepare/front/pages/profile.js"],"names":["React","useEffect","useState","Head","axios","useSWR","useSelector","useDispatch","Router","AppLayout","NicknameEditForm","FollowList","fetcher","url","get","widthCredentials","then","result","data","Profile","dispatch","state","user","me","followersLimit","setFollowersLimit","followersData","followerError","error","followingsLimit","followingsData","followingError","id","push","console"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAKA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD;AAAA,SAAST,KAAK,CAACU,GAAN,CAAUD,GAAV,EAAe;AAAEE,IAAAA,gBAAgB,EAAE;AAApB,GAAf,EAA2CC,IAA3C,CAAgD,UAACC,MAAD;AAAA,WAAYA,MAAM,CAACC,IAAnB;AAAA,GAAhD,CAAT;AAAA,CAAhB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AACpB,MAAMC,QAAQ,GAAGb,WAAW,EAA5B,CADoB,CAGpB;AACA;;AAEA,qBAAeD,WAAW,CAAC,UAACe,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAA1B;AAAA,MAAQC,EAAR,gBAAQA,EAAR;;AACA,kBAA4CrB,QAAQ,CAAC,CAAD,CAApD;AAAA,MAAOsB,cAAP;AAAA,MAAuBC,iBAAvB,gBAPoB,CASpB;;;AACA,gBAAsDpB,MAAM,sDAA+CmB,cAA/C,GAAiEZ,OAAjE,CAA5D;AAAA,MAAcc,aAAd,WAAQR,IAAR;AAAA,MAAoCS,aAApC,WAA6BC,KAA7B;;AACA,iBAAwDvB,MAAM,uDAAgDwB,eAAhD,GAAmEjB,OAAnE,CAA9D;AAAA,MAAckB,cAAd,YAAQZ,IAAR;AAAA,MAAqCa,cAArC,YAA8BH,KAA9B,CAXoB,CAapB;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;AAEA3B,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,EAAEsB,EAAE,IAAIA,EAAE,CAACS,EAAX,CAAJ,EAAoB;AAClBxB,MAAAA,MAAM,CAACyB,IAAP,CAAY,GAAZ;AACD;AACF,GAJQ,EAIN,CAACV,EAAE,IAAIA,EAAE,CAACS,EAAV,CAJM,CAAT;;AAMA,MAAI,CAACT,EAAL,EAAS;AACP,WAAO,aAAP;AACD;;AAED,MAAII,aAAa,IAAII,cAArB,EAAqC;AACnCG,IAAAA,OAAO,CAACN,KAAR,CAAcD,aAAa,IAAII,cAA/B;AACA,WAAO,yBAAP;AACD;;AAED,SACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADF,CADF,EAIE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,UAAD;AAAY,IAAA,MAAM,EAAC,oBAAnB;AAAyB,IAAA,IAAI,EAAED,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,UAAD;AAAY,IAAA,MAAM,EAAC,oBAAnB;AAAyB,IAAA,IAAI,EAAEJ,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAJF,CADF;AAYD,CApDD;;GAAMP,O;UACaZ,W,EAKFD,W,EAIuCD,M,EACEA,M;;;KAXpDc,O;;AAoEN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Head from 'next/head';\r\nimport { END } from 'redux-saga';\r\nimport axios from 'axios';\r\nimport useSWR from 'swr';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Router from 'next/router';\r\nimport AppLayout from '../components/AppLayout';\r\nimport NicknameEditForm from '../components/NicknameEditForm';\r\nimport FollowList from '../components/FollowList';\r\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\r\nimport wrapper from '../store/configureStore';\r\n\r\n\r\nconst fetcher = (url) => axios.get(url, { widthCredentials: true }).then((result) => result.data);\r\n\r\nconst Profile = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  // const followerList = [{ nickname: '제로초' }, { nickname: '바보' }, { nickname: '노드버드오피셜' }];\r\n  // const followingList = [{ nickname: '제로초' }, { nickname: '바보' }, { nickname: '노드버드오피셜' }];\r\n\r\n  const { me } = useSelector((state) => state.user);\r\n  const [followersLimit, setFollowersLimit] = useState(3);\r\n\r\n  // dispatch대신에 써줄수 있다.\r\n  const { data: followersData, error: followerError } = useSWR(`http://localhost:3065/user/followers?limit=${followersLimit}`, fetcher);\r\n  const { data: followingsData, error: followingError } = useSWR(`http://localhost:3065/user/followings?limit=${followingsLimit}`, fetcher);\r\n\r\n  // useEffect(() => {\r\n\r\n  //   dispatch({\r\n  //     type: LOAD_FOLLOWERS_REQUEST,\r\n  //   });\r\n\r\n  //   dispatch({\r\n  //     type: LOAD_FOLLOWINGS_REQUEST,\r\n  //   });\r\n\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    if (!(me && me.id)) {\r\n      Router.push('/');\r\n    }\r\n  }, [me && me.id]);\r\n\r\n  if (!me) {\r\n    return '내 정보 로딩중...';\r\n  }\r\n\r\n  if (followerError || followingError) {\r\n    console.error(followerError || followingError);\r\n    return '팔로잉/팔로워 로딩 중 에러가 발생합니다.';\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>내 프로필 | Nodebird</title>\r\n      </Head>\r\n      <AppLayout>\r\n        <NicknameEditForm />\r\n        <FollowList header=\"팔로잉\" data={followingsData} />\r\n        <FollowList header=\"팔로워\" data={followersData} />\r\n      </AppLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}