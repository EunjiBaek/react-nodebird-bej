{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ka\\\\Desktop\\\\react-nodebird\\\\prepare\\\\front\\\\pages\\\\post\\\\[id].js\";\nvar __jsx = React.createElement;\n// post/[id].js -> id가 계속 바뀐다\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport Head from 'next/head';\nimport wrapper from '../../store/configureStore';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport { LOAD_POST_REQUEST } from '../../reducers/post'; // 단일게시물 가져오기\n\nimport AppLayout from '../../components/AppLayout';\nimport PostCard from '../../components/PostCard';\n\nconst Post = () => {\n  const {\n    singlePost\n  } = useSelector(state => state.post);\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n\n  if (router.isFallback) {}\n\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAE00\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: singlePost.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: `${singlePost.User.nickname}님의 게시글`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: singlePost.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: singlePost.Images[0] ? singlePost.Images[0].src : 'https://nodebird.com/favicon.ico',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: `https://nodebird.com/post/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  })), __jsx(PostCard, {\n    post: singlePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport async function getStaticPaths() {\n  return {\n    paths: [{\n      params: {\n        id: '36'\n      }\n    }],\n    fallback: false\n  };\n} // getServerSideProps, getStaticProps\n\nexport const getStaticProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Post;","map":{"version":3,"sources":["C:/Users/ka/Desktop/react-nodebird/prepare/front/pages/post/[id].js"],"names":["React","useSelector","useRouter","END","axios","Head","wrapper","LOAD_MY_INFO_REQUEST","LOAD_POST_REQUEST","AppLayout","PostCard","Post","singlePost","state","post","router","id","query","isFallback","User","nickname","content","Images","src","getStaticPaths","paths","params","fallback","getStaticProps","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","dispatch","type","data","sagaTask","toPromise"],"mappings":"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","sourcesContent":["// post/[id].js -> id가 계속 바뀐다\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useRouter } from 'next/router';\r\nimport { END } from 'redux-saga';\r\nimport axios from 'axios';\r\nimport Head from 'next/head';\r\n\r\nimport wrapper from '../../store/configureStore';\r\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\r\nimport { LOAD_POST_REQUEST } from '../../reducers/post'; // 단일게시물 가져오기\r\nimport AppLayout from '../../components/AppLayout';\r\nimport PostCard from '../../components/PostCard';\r\n\r\nconst Post = () => {\r\n    const { singlePost } = useSelector((state) => state.post);\r\n    const router = useRouter();\r\n    const { id } = router.query;\r\n\r\n    if (router.isFallback) {\r\n        \r\n    }\r\n\r\n    return (\r\n        <AppLayout>\r\n            <Head>\r\n                <title>\r\n                    {singlePost.User.nickname}\r\n                    님의 글\r\n                </title>\r\n                {/* og -> 공유할때 미리보기 */}\r\n                <meta name=\"description\" content={singlePost.content} />\r\n                <meta property=\"og:title\" content={`${singlePost.User.nickname}님의 게시글`} />\r\n                <meta property=\"og:description\" content={singlePost.content} />\r\n                <meta property=\"og:image\" content={singlePost.Images[0] ? singlePost.Images[0].src : 'https://nodebird.com/favicon.ico'} />\r\n                <meta property=\"og:url\" content={`https://nodebird.com/post/${id}`} />\r\n            </Head>\r\n            <PostCard post={singlePost} />\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\n\r\nexport async function getStaticPaths() {\r\n    return {\r\n        paths: [\r\n            { params: { id: '36' } }\r\n        ],\r\n        fallback: false,\r\n    };\r\n}\r\n\r\n\r\n// getServerSideProps, getStaticProps\r\nexport const getStaticProps = wrapper.getServerSideProps(async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch({\r\n        type: LOAD_POST_REQUEST,\r\n        data: context.params.id,\r\n    });\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Post;"]},"metadata":{},"sourceType":"module"}