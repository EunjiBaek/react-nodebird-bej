{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nimport reducer from '../reducers';\n\nvar loggerMiddleware = function loggerMiddleware(_ref) {\n  var dispatch = _ref.dispatch,\n      getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      if (typeof action === 'function') {\n        return action(dispatch, getState);\n      }\n\n      return next(action);\n    };\n  };\n};\n\nvar configureStore = function configureStore() {\n  var middlewares = [thunkMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/ka/Desktop/react-nodebird/prepare/front/store/configureStore.js"],"names":["createWrapper","applyMiddleware","compose","createStore","composeWithDevTools","thunkMiddleware","reducer","loggerMiddleware","dispatch","getState","next","action","configureStore","middlewares","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,oBAA5B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,OAAOC,OAAP,MAAoB,aAApB;;AAGA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,MAAaC,QAAb,QAAaA,QAAb;AAAA,SAA4B,UAACC,IAAD;AAAA,WAAU,UAACC,MAAD,EAAY;AACvE,UAAI,OAAOA,MAAP,KAAkB,UAAtB,EAAkC;AAC9B,eAAOA,MAAM,CAACH,QAAD,EAAWC,QAAX,CAAb;AACH;;AAED,aAAOC,IAAI,CAACC,MAAD,CAAX;AACH,KANoD;AAAA,GAA5B;AAAA,CAAzB;;AAYA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,MAAMC,WAAW,GAAG,CAACR,eAAD,CAApB;AAEA,MAAMS,QAAQ,GAAG,QACXZ,OAAO,CAACD,eAAe,MAAf,SAAmBY,WAAnB,CAAD,CADI,GAEXT,mBAAmB,CAACH,eAAe,MAAf,SAAmBY,WAAnB,CAAD,CAFzB;AAGA,MAAME,KAAK,GAAIZ,WAAW,CAACG,OAAD,EAAUQ,QAAV,CAA1B;AAEA,SAAOC,KAAP;AACH,CATD;;AAYA,IAAMC,OAAO,GAAGhB,aAAa,CAACY,cAAD,EAAiB;AAC1CK,EAAAA,KAAK;AADqC,CAAjB,CAA7B;AAKA,eAAeD,OAAf","sourcesContent":["import {createWrapper} from 'next-redux-wrapper';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport reducer from '../reducers';\r\n\r\n\r\nconst loggerMiddleware = ({ dispatch, getState }) => (next) => (action) => {\r\n    if (typeof action === 'function') {\r\n        return action(dispatch, getState);\r\n    }\r\n\r\n    return next(action);\r\n};\r\n \r\n  \r\n\r\n\r\n\r\nconst configureStore = () => {\r\n    const middlewares = [thunkMiddleware];\r\n\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n        ? compose(applyMiddleware(...middlewares))\r\n        : composeWithDevTools(applyMiddleware(...middlewares))  \r\n    const store =  createStore(reducer, enhancer);\r\n    \r\n    return store;\r\n}  \r\n\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n    debug: process.env.NODE_ENV === 'development'\r\n});\r\n\r\n\r\nexport default wrapper;\r\n"]},"metadata":{},"sourceType":"module"}