{"ast":null,"code":"import { delay, put, takeLatest, all, fork } from \"redux-saga/effects\";\nimport '../reducers/post';\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data)\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["C:/Users/ka/Desktop/react-nodebird/prepare/front/sagas/post.js"],"names":["delay","put","takeLatest","all","fork","addPostAPI","data","axios","post","addPost","action","type","ADD_POST_SUCCESS","err","ADD_POST_FAILURE","watchAddPost","ADD_POST_REQUEST","postSaga","watchAddComment"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,GAAhB,EAAqBC,UAArB,EAAiCC,GAAjC,EAAsCC,IAAtC,QAAkD,oBAAlD;AACA,OAAe,kBAAf;;AAGA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtB,SAAOC,KAAK,CAACC,IAAN,CAAW,WAAX,EAAwBF,IAAxB,CAAP;AACH;;AAGD,UAAUG,OAAV,CAAkBC,MAAlB,EAA0B;AACtB,MAAI;AACA;AACA,UAAMV,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACNU,MAAAA,IAAI,EAAEC,gBADA;AAENN,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFP,KAAD,CAAT;AAIH,GAPD,CAOC,OAAMO,GAAN,EAAU;AACP,UAAMZ,GAAG,CAAC;AACNU,MAAAA,IAAI,EAAEG;AADA,KAAD,CAAT;AAGH;AAEJ;;AAED,UAAUC,YAAV,GAAyB;AACrB,QAAMb,UAAU,CAACc,gBAAD,EAAmBP,OAAnB,CAAhB;AACH;;AAGD,eAAe,UAAUQ,QAAV,GAAoB;AAC/B,QAAMd,GAAG,CAAC,CACNC,IAAI,CAACW,YAAD,CADE,EAENX,IAAI,CAACc,eAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { delay, put, takeLatest, all, fork } from \"redux-saga/effects\";\r\nimport {} from '../reducers/post';\r\n\r\n\r\nfunction addPostAPI(data) {\r\n    return axios.post('/api/post', data)\r\n}\r\n\r\n\r\nfunction* addPost(action) {\r\n    try {\r\n        // const result = yield call(addPostAPI, action.data)\r\n        yield delay(1000);\r\n        yield put({\r\n            type: ADD_POST_SUCCESS,\r\n            data: action.data\r\n        })\r\n    }catch(err){\r\n        yield put({\r\n            type: ADD_POST_FAILURE,\r\n        })\r\n    }\r\n    \r\n}\r\n\r\nfunction* watchAddPost() {\r\n    yield takeLatest(ADD_POST_REQUEST, addPost);   \r\n}\r\n\r\n\r\nexport default function* postSaga(){\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchAddComment)\r\n    ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}