{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ka\\\\Desktop\\\\react-nodebird\\\\prepare\\\\front\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport AppLayout from '../components/AppLayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    function onScroll() {\n      console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\n\n      if (window.scrollY + document.documentElement.clientHeight === document.documentElement.scrollHeight) {\n        dispatch({\n          type: LOAD_POSTS_REQUEST\n        });\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, []);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, me && __jsx(PostForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 14\n    }\n  }), mainPosts.map(post => __jsx(PostCard, {\n    key: post.id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 32\n    }\n  })));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/ka/Desktop/react-nodebird/prepare/front/pages/index.js"],"names":["React","useEffect","useSelector","useDispatch","AppLayout","PostForm","PostCard","LOAD_POSTS_REQUEST","Home","dispatch","type","onScroll","console","log","window","scrollY","document","documentElement","clientHeight","scrollHeight","addEventListener","removeEventListener","me","mainPosts","map","post","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAEjB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEH;AADC,KAAD,CAAR;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMAN,EAAAA,SAAS,CAAC,MAAM;AACd,aAASU,QAAT,GAAoB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,OAAnB,EAA4BC,QAAQ,CAACC,eAAT,CAAyBC,YAArD,EAAmEF,QAAQ,CAACC,eAAT,CAAyBE,YAA5F;;AAEA,UAAGL,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,KAA2DF,QAAQ,CAACC,eAAT,CAAyBE,YAAvF,EAAqG;AACnGV,QAAAA,QAAQ,CAAC;AACPC,UAAAA,IAAI,EAAEH;AADC,SAAD,CAAR;AAGD;AACF;;AAEDO,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCT,QAAlC;AACA,WAAO,MAAM;AACXG,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCV,QAArC;AACD,KAFD;AAID,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGW,EAAE,IAAI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADT,EAEGC,SAAS,CAACC,GAAV,CAAeC,IAAD,IAAU,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,IAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,CAFH,CADF;AAMD,CAjCD;;AAqCA,eAAejB,IAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport AppLayout from '../components/AppLayout';\r\nimport PostForm from '../components/PostForm';\r\nimport PostCard from '../components/PostCard';\r\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\r\n\r\nconst Home = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: LOAD_POSTS_REQUEST,\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    function onScroll() {\r\n      console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\r\n\r\n      if(window.scrollY + document.documentElement.clientHeight === document.documentElement.scrollHeight) {\r\n        dispatch({\r\n          type: LOAD_POSTS_REQUEST,\r\n        });\r\n      }\r\n    }\r\n\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    }\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <AppLayout>\r\n      {me && <PostForm />}\r\n      {mainPosts.map((post) => <PostCard key={post.id} post={post} />)}\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}