{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  isLoggingIn: false,\n  // 로그인 시도중\n  isLoggedIn: false,\n  isLoggingOut: false,\n  // 로그아웃 시도중\n  me: null,\n  signUpData: {},\n  LoginData: {}\n};\nexport const loginAction = data => {\n  return (dispatch, getState) => {\n    const data = getState();\n    dispatch(loginRequestAction());\n    axios.post('/api/login').then(res => {\n      dispatch(loginSuccessAction(res.data));\n    }).chatch(err => {\n      dispatch(loginFailureAction(err));\n    });\n  };\n};\nexport const logoutAction = data => {\n  return (dispatch, getState) => {\n    const data = getState();\n    dispatch(logoutRequestAction());\n    axios.post('/api/login').then(res => {\n      dispatch(logoutSuccessAction(res.data));\n    }).chatch(err => {\n      dispatch(logoutFailureAction(err));\n    });\n  };\n}; // action creater\n\nexport const loginRequestAction = data => {\n  return {\n    type: 'LOG_IN_REQUEST',\n    data\n  };\n};\nexport const logoutRequestAction = () => {\n  return {\n    type: 'LOG_OUT_REQUEST'\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOG_IN_REQUEST':\n      console.log('reducer login');\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: true\n      });\n\n    case 'LOG_IN_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: true,\n        me: _objectSpread(_objectSpread({}, action.data), {}, {\n          nickname: 'zerocho'\n        })\n      });\n\n    case 'LOG_IN_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: false\n      });\n\n    case 'LOG_OUT_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: true\n      });\n\n    case 'LOG_OUT_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false,\n        isLoggedIn: false,\n        me: null\n      });\n\n    case 'LOG_OUT_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/ka/Desktop/react-nodebird/prepare/front/reducers/user.js"],"names":["initialState","isLoggingIn","isLoggedIn","isLoggingOut","me","signUpData","LoginData","loginAction","data","dispatch","getState","loginRequestAction","axios","post","then","res","loginSuccessAction","chatch","err","loginFailureAction","logoutAction","logoutRequestAction","logoutSuccessAction","logoutFailureAction","type","reducer","state","action","console","log","nickname"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,WAAW,EAAE,KADW;AACJ;AACpBC,EAAAA,UAAU,EAAE,KAFY;AAGxBC,EAAAA,YAAY,EAAE,KAHU;AAGH;AACrBC,EAAAA,EAAE,EAAE,IAJoB;AAKxBC,EAAAA,UAAU,EAAE,EALY;AAMxBC,EAAAA,SAAS,EAAE;AANa,CAArB;AAUP,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU;AACjC,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3B,UAAMF,IAAI,GAAGE,QAAQ,EAArB;AAEAD,IAAAA,QAAQ,CAACE,kBAAkB,EAAnB,CAAR;AACAC,IAAAA,KAAK,CAACC,IAAN,CAAW,YAAX,EACCC,IADD,CACOC,GAAD,IAAS;AACXN,MAAAA,QAAQ,CAACO,kBAAkB,CAACD,GAAG,CAACP,IAAL,CAAnB,CAAR;AACH,KAHD,EAICS,MAJD,CAISC,GAAD,IAAS;AACbT,MAAAA,QAAQ,CAACU,kBAAkB,CAACD,GAAD,CAAnB,CAAR;AACH,KAND;AAOH,GAXD;AAYH,CAbM;AAgBP,OAAO,MAAME,YAAY,GAAIZ,IAAD,IAAU;AAClC,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3B,UAAMF,IAAI,GAAGE,QAAQ,EAArB;AAEAD,IAAAA,QAAQ,CAACY,mBAAmB,EAApB,CAAR;AACAT,IAAAA,KAAK,CAACC,IAAN,CAAW,YAAX,EACCC,IADD,CACOC,GAAD,IAAS;AACXN,MAAAA,QAAQ,CAACa,mBAAmB,CAACP,GAAG,CAACP,IAAL,CAApB,CAAR;AACH,KAHD,EAICS,MAJD,CAISC,GAAD,IAAS;AACbT,MAAAA,QAAQ,CAACc,mBAAmB,CAACL,GAAD,CAApB,CAAR;AACH,KAND;AAOH,GAXD;AAYH,CAbM,C,CAiBP;;AACA,OAAO,MAAMP,kBAAkB,GAAIH,IAAD,IAAU;AACxC,SAAO;AACHgB,IAAAA,IAAI,EAAE,gBADH;AAEHhB,IAAAA;AAFG,GAAP;AAIH,CALM;AASP,OAAO,MAAMa,mBAAmB,GAAG,MAAM;AACrC,SAAO;AACHG,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJM;;AAQP,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG1B,YAAT,EAAuB2B,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACH,IAAf;AACI,SAAK,gBAAL;AACII,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,6CACOH,KADP;AAEIzB,QAAAA,WAAW,EAAE;AAFjB;;AAKJ,SAAK,gBAAL;AACI,6CACOyB,KADP;AAEIzB,QAAAA,WAAW,EAAE,KAFjB;AAGIC,QAAAA,UAAU,EAAE,IAHhB;AAIIE,QAAAA,EAAE,kCAAMuB,MAAM,CAACnB,IAAb;AAAmBsB,UAAAA,QAAQ,EAAE;AAA7B;AAJN;;AAQJ,SAAK,gBAAL;AACI,6CACOJ,KADP;AAEIzB,QAAAA,WAAW,EAAE,KAFjB;AAGIC,QAAAA,UAAU,EAAE;AAHhB;;AAMJ,SAAK,iBAAL;AACI,6CACOwB,KADP;AAEIvB,QAAAA,YAAY,EAAE;AAFlB;;AAKJ,SAAK,iBAAL;AACI,6CACOuB,KADP;AAEIvB,QAAAA,YAAY,EAAE,KAFlB;AAGID,QAAAA,UAAU,EAAE,KAHhB;AAIIE,QAAAA,EAAE,EAAE;AAJR;;AAQJ,SAAK,iBAAL;AACI,6CACOsB,KADP;AAEIvB,QAAAA,YAAY,EAAE;AAFlB;;AAKJ;AACI,aAAOuB,KAAP;AA9CR;AAgDH,CAjDD;;AAmDA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n    isLoggingIn: false, // 로그인 시도중\r\n    isLoggedIn: false,\r\n    isLoggingOut: false, // 로그아웃 시도중\r\n    me: null,\r\n    signUpData: {},\r\n    LoginData: {}\r\n}\r\n\r\n\r\nexport const loginAction = (data) => {\r\n    return (dispatch, getState) => {\r\n        const data = getState();\r\n\r\n        dispatch(loginRequestAction())\r\n        axios.post('/api/login')\r\n        .then((res) => {\r\n            dispatch(loginSuccessAction(res.data));\r\n        })\r\n        .chatch((err) => {\r\n            dispatch(loginFailureAction(err));\r\n        })      \r\n    }\r\n}\r\n\r\n\r\nexport const logoutAction = (data) => {\r\n    return (dispatch, getState) => {\r\n        const data = getState();\r\n\r\n        dispatch(logoutRequestAction())\r\n        axios.post('/api/login')\r\n        .then((res) => {\r\n            dispatch(logoutSuccessAction(res.data));\r\n        })\r\n        .chatch((err) => {\r\n            dispatch(logoutFailureAction(err));\r\n        })      \r\n    }\r\n}\r\n\r\n\r\n\r\n// action creater\r\nexport const loginRequestAction = (data) => {\r\n    return {\r\n        type: 'LOG_IN_REQUEST',\r\n        data\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const logoutRequestAction = () => {\r\n    return {\r\n        type: 'LOG_OUT_REQUEST'\r\n    }\r\n}\r\n\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LOG_IN_REQUEST':\r\n            console.log('reducer login');\r\n            return {\r\n                ...state,\r\n                isLoggingIn: true\r\n            };\r\n\r\n        case 'LOG_IN_SUCCESS':\r\n            return {\r\n                ...state,\r\n                isLoggingIn: false,\r\n                isLoggedIn: true,\r\n                me: {...action.data, nickname: 'zerocho'},\r\n    \r\n            };\r\n\r\n        case 'LOG_IN_FAILURE':\r\n            return {\r\n                ...state,\r\n                isLoggingIn: false,\r\n                isLoggedIn: false,\r\n            };\r\n\r\n        case 'LOG_OUT_REQUEST':\r\n            return {\r\n                ...state,\r\n                isLoggingOut: true,\r\n            };\r\n\r\n        case 'LOG_OUT_SUCCESS':\r\n            return {\r\n                ...state,\r\n                isLoggingOut: false,\r\n                isLoggedIn: false,\r\n                me: null\r\n            };\r\n\r\n\r\n        case 'LOG_OUT_FAILURE':\r\n            return {\r\n                ...state,\r\n                isLoggingOut: false,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}