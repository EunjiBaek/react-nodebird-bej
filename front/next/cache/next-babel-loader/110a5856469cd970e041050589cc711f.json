{"ast":null,"code":"import { all, fork, put, takeLatest, delay, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE } from '../reducers/user'; // get이랑 delete는 데이터가 없다.\n\nfunction loadUserAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction signupAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signup(action) {\n  try {\n    const result = yield call(signupAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI() {\n  return axios.post('/follow');\n}\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(followAPI)\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI() {\n  return axios.post('/follow');\n}\n\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(unfollowAPI)\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signup);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLoadUser), fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), // call이랑은 다르다\n  fork(watchLogOut), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["C:/Users/ka/Desktop/react-nodebird/prepare/front/sagas/user.js"],"names":["all","fork","put","takeLatest","delay","call","axios","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","loadUserAPI","get","loadUser","action","result","data","type","err","error","response","logInAPI","post","logIn","logOutAPI","logOut","signupAPI","signup","console","log","followAPI","follow","unfollowAPI","unfollow","watchLoadUser","watchFollow","watchUnfollow","watchLogIn","watchLogOut","watchSignUp","userSaga"],"mappings":"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","sourcesContent":["import { all, fork, put, takeLatest, delay, call } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n  LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE,\r\n  LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE,\r\n  LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\r\n  SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE,\r\n  FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE,\r\n  UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE,\r\n} from '../reducers/user';\r\n\r\n\r\n\r\n// get이랑 delete는 데이터가 없다.\r\nfunction loadUserAPI() {\r\n  return axios.get('/user');\r\n}\r\n\r\nfunction* loadUser(action) {\r\n  try {\r\n    const result = yield call(loadUserAPI, action.data);\r\n    yield put({\r\n      type: LOAD_USER_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_USER_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction logInAPI(data) {\r\n  return axios.post('/user/login', data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    const result = yield call(logInAPI, action.data);\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction logOutAPI() {\r\n  return axios.post('/user/logout');\r\n}\r\n\r\nfunction* logOut() {\r\n  try {\r\n    yield call(logOutAPI);\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction signupAPI(data) {\r\n  return axios.post('/user', data);\r\n}\r\n\r\nfunction* signup(action) {\r\n  try {\r\n    const result = yield call(signupAPI, action.data);\r\n    console.log(result);\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction followAPI() {\r\n  return axios.post('/follow');\r\n}\r\n\r\nfunction* follow(action) {\r\n  try {\r\n    // const result = yield call(followAPI)\r\n    yield delay(1000);\r\n    yield put({\r\n      type: FOLLOW_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: FOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction unfollowAPI() {\r\n  return axios.post('/follow');\r\n}\r\n\r\nfunction* unfollow(action) {\r\n  try {\r\n    // const result = yield call(unfollowAPI)\r\n    yield delay(1000);\r\n    yield put({\r\n      type: UNFOLLOW_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: UNFOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n\r\nfunction* watchLoadUser() {\r\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nfunction* watchFollow() {\r\n  yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signup);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchLoadUser),\r\n    fork(watchFollow),\r\n    fork(watchUnfollow),\r\n    fork(watchLogIn), // call이랑은 다르다\r\n    fork(watchLogOut),\r\n    fork(watchSignUp),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}